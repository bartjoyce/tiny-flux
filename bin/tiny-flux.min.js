var Dispatcher=function(){var a=0,b=1,c=2,d=this;d.phase=a,d.stores=[],d.register=function(a,c){if(d.phase===b)throw"Cannot register new store whilst dispatching!";d.stores.push({storeObj:a,callback:c})},d.dispatch=function(c){if(d.phase===b)throw"Cannot dispatch an action whilst another is already being dispatched";d.phase=b,e=[];for(var f=d.stores.length-1;f>=0;f--)d.stores[f].phase=a,d.stores[f].didEmitChange=!1;for(var f=d.stores.length-1;f>=0;f--)g(c,d.stores[f]);for(var f=e.length-1;f>=0;f--)e[f]();d.phase=a};var e;d.addPostDispatchCallback=function(a){d.phase===b&&-1===e.indexOf(a)&&e.push(a)},d.removePostDispatchCallback=function(a){if(d.phase===b){var c=e.indexOf(a);-1!==c&&(e[c]=function(){})}};var f=[],g=function(a,e){if(e.phase!==c){if(e.phase===b)throw"Cannot dispatch action: circular dependency amongst stores";e.phase=b,f.push(d.waitFor),d.waitFor=function(b){if(1===arguments.length){for(var c=d.stores.length-1;c>=0&&d.stores[c].storeObj!==b;c--);if(0>c)throw"Unregistered store";g(a,d.stores[c])}else for(var c=0;c<arguments.length;c++)d.waitFor(arguments[c])},e.didEmitChange=e.callback(a),d.waitFor=f.pop(d.waitFor),e.phase=c}};return d.waitFor=function(){},d.didEmitChange=function(a){if(1!==arguments.length){for(var b=0;b<arguments.length;b++)if(d.didEmitChange(arguments[b]))return!0;return!1}for(var b=d.stores.length-1;b>=0&&d.stores[b].storeObj!==a;b--);if(0>b)throw"Unregistered store";return d.stores[b].didEmitChange},d},Store=function(a){for(var b={},c=Object.keys(a),d=0;d<c.length;d++){var e=c[d],f=a[e];this[e]="function"==typeof f?f.bind(b):f}var g=[];this.addChangeListener=function(a){return g.push(a),a},this.removeChangeListener=function(a){var b=g.indexOf(a);if(-1!==b){if(this.dispatcher.removePostDispatchCallback(a),1===g.length)return void(g=[]);var c=g.pop();c!==a&&(g[b]=c)}};var h=!1;b.emitChange=function(){for(var a=g.length-1;a>=0;a--)this.dispatcher.addPostDispatchCallback(g[a]);h=!0}.bind(this);var i=this.callback;return this.callback=function(a){return h=!1,i(a),h},this.dispatcher.register(this,this.callback),this.initialize&&this.initialize(),this};module&&(module.exports={Dispatcher:Dispatcher,Store:Store});